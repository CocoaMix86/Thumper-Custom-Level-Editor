//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Thumper___Leaf_Editor.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Thumper___Leaf_Editor.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap bosssectionhelp {
            get {
                object obj = ResourceManager.GetObject("bosssectionhelp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap difficultyhelp {
            get {
                object obj = ResourceManager.GetObject("difficultyhelp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap exit {
            get {
                object obj = ResourceManager.GetObject("exit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap gate {
            get {
                object obj = ResourceManager.GetObject("gate", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&quot;masterLvlList&quot;: &quot;CHECKPOINT COLUMN\nIf checked, the lvl will end with a checkpoint. If unchecked, the lvl will not end with a checkpoint and will flow into the next lvl.\n\nPLAY+ COLUMN\nIf checked, the lvl will appear when playing in Play+. If unchecked, it will be left out. This is useful for tutorial levels in Play, and then removing them for Play+.\n\nISOLATE\nWhen checked, only isolated levels will play in game. Useful for testing specific sublevels without replaying the entire thing.&quot;,
        ///&quot;masterChe [rest of string was truncated]&quot;;.
        /// </summary>
        public static string helptext {
            get {
                return ResourceManager.GetString("helptext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap icon_interp {
            get {
                object obj = ResourceManager.GetObject("icon_interp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap icon_newfile {
            get {
                object obj = ResourceManager.GetObject("icon_newfile", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap icon_openfile {
            get {
                object obj = ResourceManager.GetObject("icon_openfile", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap icon_save {
            get {
                object obj = ResourceManager.GetObject("icon_save", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap icon_saveas {
            get {
                object obj = ResourceManager.GetObject("icon_saveas", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap icon_template {
            get {
                object obj = ResourceManager.GetObject("icon_template", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap leaf {
            get {
                object obj = ResourceManager.GetObject("leaf", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {&quot;obj_type&quot;:&quot;SequinLeaf&quot;,&quot;obj_name&quot;:&quot;multitrack.leaf&quot;,&quot;seq_objs&quot;:[{&quot;obj_name&quot;:&quot;multitrack.leaf&quot;,&quot;param_path&quot;:&quot;pitch&quot;,&quot;trait_type&quot;:&quot;kTraitFloat&quot;,&quot;data_points&quot;:{},&quot;step&quot;:&quot;True&quot;,&quot;default&quot;:1.25,&quot;footer&quot;:[4,1,2,1,2,&quot;kIntensityScale&quot;,&quot;kIntensityScale&quot;,1,0,1,1,1,1,1,1,0,0,0],&quot;editor_data&quot;:[&quot;-8355585&quot;,1.0]},{&quot;obj_name&quot;:&quot;multitrack.leaf&quot;,&quot;param_path&quot;:&quot;roll&quot;,&quot;trait_type&quot;:&quot;kTraitFloat&quot;,&quot;data_points&quot;:{},&quot;step&quot;:&quot;True&quot;,&quot;default&quot;:0.0,&quot;footer&quot;:[4,1,2,1,2,&quot;kIntensityScale&quot;,&quot;kIntensityScale&quot;,1,0,1,1,1,1,1,1,0,0,0],&quot;editor_da [rest of string was truncated]&quot;;.
        /// </summary>
        public static string leaf_multitrack {
            get {
                return ResourceManager.GetString("leaf_multitrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&apos;obj_type&apos;: &apos;SequinLeaf&apos;,
        ///&apos;obj_name&apos;: &apos;pyramid_outro.leaf&apos;,
        ///&apos;seq_objs&apos;: [
        ///    {
        ///    &apos;obj_name&apos;: &apos;pyramid_outro.leaf&apos;,
        ///    &apos;param_path&apos;: &apos;pitch&apos;,
        ///    &apos;trait_type&apos;: &apos;kTraitFloat&apos;,
        ///    &apos;data_points&apos;: {
        ///        0: 0.96875, 1: 0.96875, 2: 0.96875, 3: 0.96875, 4: 0.96875, 5: 0.96875, 6: 0.96875, 7: 0.96875, 8: 0.96875, 9: 0.96875, 10: 0.96875, 11: 0.96875, 12: 0.96875, 13: 0.96875, 14: 0.96875, 15: 0.96875, 16: 0.96875, 17: 0.96875, 18: 0.96875, 19: 0.96875, 20: 0.96875, 21: 0.96875, 22: 0.96875, 23: 0 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string leaf_pyramid_outro {
            get {
                return ResourceManager.GetString("leaf_pyramid_outro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {&quot;obj_type&quot;:&quot;SequinLeaf&quot;,&quot;obj_name&quot;:&quot;singletrack.leaf&quot;,&quot;seq_objs&quot;:[{&quot;obj_name&quot;:&quot;singletrack.leaf&quot;,&quot;param_path&quot;:&quot;pitch&quot;,&quot;trait_type&quot;:&quot;kTraitFloat&quot;,&quot;data_points&quot;:{},&quot;step&quot;:&quot;True&quot;,&quot;default&quot;:1.25,&quot;footer&quot;:[4,1,2,1,2,&quot;kIntensityScale&quot;,&quot;kIntensityScale&quot;,1,0,1,1,1,1,1,1,0,0,0],&quot;editor_data&quot;:[&quot;-8355585&quot;,1.0]},{&quot;obj_name&quot;:&quot;singletrack.leaf&quot;,&quot;param_path&quot;:&quot;roll&quot;,&quot;trait_type&quot;:&quot;kTraitFloat&quot;,&quot;data_points&quot;:{},&quot;step&quot;:&quot;True&quot;,&quot;default&quot;:0.0,&quot;footer&quot;:[4,1,2,1,2,&quot;kIntensityScale&quot;,&quot;kIntensityScale&quot;,1,0,1,1,1,1,1,1,0,0,0],&quot;editor [rest of string was truncated]&quot;;.
        /// </summary>
        public static string leaf_singletrack {
            get {
                return ResourceManager.GetString("leaf_singletrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap lvl {
            get {
                object obj = ResourceManager.GetObject("lvl", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap master {
            get {
                object obj = ResourceManager.GetObject("master", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to arms_deca.path
        ///arms_diamond.path
        ///arms_hex.path
        ///arms_oct.path
        ///arms_pentagon.path
        ///arms_sept.path
        ///arms_square.path
        ///arms_triangle.path
        ///black_tunnel.path
        ///boss_bright_A.path
        ///boss_bright_B.path
        ///boss_tube_path.path
        ///boss_tube_path_no_end.path
        ///boss_tunnel_effect.path
        ///cave_dec_bright.path
        ///cave_dec_chrome.path
        ///cave_diamond_bright.path
        ///cave_diamond_chrome.path
        ///cave_diamond_chrome_ring.path
        ///cave_diamond_glass.path
        ///cave_hexagon_bright.path
        ///cave_hexagon_chrome.path
        ///cave_octo_bright.path
        ///cave_octo_chr [rest of string was truncated]&quot;;.
        /// </summary>
        public static string paths {
            get {
                return ResourceManager.GetString("paths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap railcolorhelp {
            get {
                object obj = ResourceManager.GetObject("railcolorhelp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&apos;items&apos;: [
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;level_drone.samp&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/levels/level_6/drones/level_drone_pattern1.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 0.7799999713897705,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;drums_sparse_pattern5.samp&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/levels/level_9/drums/drums_sparse_pattern5.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;sequi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string samp_default {
            get {
                return ResourceManager.GetString("samp_default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&apos;items&apos;: [
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;dissonant-dissonant_additive_pad.wav&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/dissonant/dissonant_additive_pad.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;dissonant-dissonant_affecting_preciousness.wav&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/dissonant/dissonant_affecting_preciousness.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;o [rest of string was truncated]&quot;;.
        /// </summary>
        public static string samp_dissonant {
            get {
                return ResourceManager.GetString("samp_dissonant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&apos;items&apos;: [
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;global_drones-beneath_ice_pattern1.wav&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/Levels/global_drones/beneath_ice_pattern1.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;global_drones-beneath_ice_pattern2.wav&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/Levels/global_drones/beneath_ice_pattern2.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string samp_globaldrones {
            get {
                return ResourceManager.GetString("samp_globaldrones", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&apos;items&apos;: [
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;drums-level1-basic1.wav&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/drums/level1/basic1.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;drums-level1-basic4.wav&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/drums/level1/basic4.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;drums-level1-basic4_cymbal.wav&apos;,
        ///&apos;mode&apos; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string samp_level1_320bpm {
            get {
                return ResourceManager.GetString("samp_level1_320bpm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&apos;items&apos;: [
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;level_2-drums-crakhed_pattern1.samp&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/levels/level_2/drums/crakhed_pattern1.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;level_2-drums-crakhed_pattern2.samp&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/levels/level_2/drums/crakhed_pattern2.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;S [rest of string was truncated]&quot;;.
        /// </summary>
        public static string samp_level2_340bpm {
            get {
                return ResourceManager.GetString("samp_level2_340bpm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&apos;items&apos;: [
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;level_3-drones-boss_drone_pattern1.samp&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/levels/level_3/drones/boss_drone_pattern1.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;level_3-drones-boss_drone_pattern2.samp&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/levels/level_3/drones/boss_drone_pattern2.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string samp_level3_360bpm {
            get {
                return ResourceManager.GetString("samp_level3_360bpm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&apos;items&apos;: [
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;level_4-drums-crakhed_pattern1.samp&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/levels/level_4/drums/crakhed_pattern1.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;level_4-drums-crakhed_pattern2.samp&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/levels/level_4/drums/crakhed_pattern2.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;S [rest of string was truncated]&quot;;.
        /// </summary>
        public static string samp_level4_380bpm {
            get {
                return ResourceManager.GetString("samp_level4_380bpm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&apos;items&apos;: [
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;level_5-drones-boss_drone_pattern1.samp&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/levels/level_5/drones/boss_drone_pattern1.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;level_5-drones-boss_drone_pattern2.samp&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/levels/level_5/drones/boss_drone_pattern2.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string samp_level5_400bpm {
            get {
                return ResourceManager.GetString("samp_level5_400bpm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&apos;items&apos;: [
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;level_6-drones-level_drone_pattern1.samp&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/levels/level_6/drones/level_drone_pattern1.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;level_6-drums-crakhed_pattern1.samp&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/levels/level_6/drums/crakhed_pattern1.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj [rest of string was truncated]&quot;;.
        /// </summary>
        public static string samp_level6_420bpm {
            get {
                return ResourceManager.GetString("samp_level6_420bpm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&apos;items&apos;: [
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;level_7-drones-turn_anticipation_pattern1.samp&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/levels/level_7/drones/turn_anticipation_pattern1.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;level_7-drones-turn_anticipation_pattern2.samp&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/levels/level_7/drones/turn_anticipation_pattern2.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string samp_level7_440bpm {
            get {
                return ResourceManager.GetString("samp_level7_440bpm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&apos;items&apos;: [
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;level_8-drones-boss_drone_pattern1.samp&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/levels/level_8/drones/boss_drone_pattern1.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;level_8-drones-boss_drone_pattern2.samp&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/levels/level_8/drones/boss_drone_pattern2.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string samp_level8_460bpm {
            get {
                return ResourceManager.GetString("samp_level8_460bpm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&apos;items&apos;: [
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;level_9-drones-boss_drone_pattern1.samp&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/levels/level_9/drones/boss_drone_pattern1.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;level_9-drones-boss_drone_pattern2.samp&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/levels/level_9/drones/boss_drone_pattern2.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string samp_level9_480bpm {
            get {
                return ResourceManager.GetString("samp_level9_480bpm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&apos;items&apos;: [
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;misc-beautiful-beautiful_sensuality.wav&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/beautiful/beautiful_sensuality.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;misc-boss-ending_sequence.wav&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/boss/ending_sequence.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;misc- [rest of string was truncated]&quot;;.
        /// </summary>
        public static string samp_misc {
            get {
                return ResourceManager.GetString("samp_misc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&apos;items&apos;: [
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;rests-rests_level8a.wav&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/Levels/rests/rests_level8a.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;rests-rests_level8b.wav&apos;,
        ///&apos;mode&apos;: &apos;kSampleOneOff&apos;,
        ///&apos;path&apos;: &apos;samples/Levels/rests/rests_level8b.wav&apos;,
        ///&apos;volume&apos;: 1.0,
        ///&apos;pitch&apos;: 1.0,
        ///&apos;pan&apos;: 0.0,
        ///&apos;offset&apos;: 0.0,
        ///&apos;channel_group&apos;: &apos;&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;Sample&apos;,
        ///&apos;obj_name&apos;: &apos;rests-rests_level9a.wav&apos;, [rest of string was truncated]&quot;;.
        /// </summary>
        public static string samp_rests {
            get {
                return ResourceManager.GetString("samp_rests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap sample {
            get {
                object obj = ResourceManager.GetObject("sample", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to level_2,drums,crakhed_pattern1.wav
        ///level_2,drums,crakhed_pattern2.wav
        ///level_2,drums,crakhed_pattern3.wav
        ///level_2,drums,crakhed_pattern4.wav
        ///level_2,drums,drums_boss_pattern1.wav
        ///level_2,drums,drums_boss_pattern2.wav
        ///level_2,drums,drums_boss_pattern3.wav
        ///level_2,drums,drums_boss_pattern4.wav
        ///level_2,drums,drums_jagged_pattern1.wav
        ///level_2,drums,drums_jagged_pattern2.wav
        ///level_2,drums,drums_jagged_pattern3.wav
        ///level_2,drums,drums_jagged_pattern4_sparse.wav
        ///level_2,drums,drums_long_pattern1.wav
        ///le [rest of string was truncated]&quot;;.
        /// </summary>
        public static string samples {
            get {
                return ResourceManager.GetString("samples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&apos;items&apos;: [
        ///{
        ///&apos;obj_type&apos;: &apos;EntitySpawner&apos;,
        ///&apos;obj_name&apos;: &apos;thump.spn&apos;,
        ///&apos;xfm_name&apos;: &apos;&apos;,
        ///&apos;constraint&apos;: &apos;kConstraintParent&apos;,
        ///&apos;pos&apos;: [0, 0, 0],
        ///&apos;rot_x&apos;: [1, 0, 0],
        ///&apos;rot_y&apos;: [0, 1, 0],
        ///&apos;rot_z&apos;: [0, 0, 1],
        ///&apos;scale&apos;: [1, 1, 1],
        ///&apos;objlib_path&apos;: &apos;decorators/thump_rails.objlib&apos;,
        ///&apos;bucket&apos;: &apos;kBucketEffect&apos;
        ///},
        ///{
        ///&apos;obj_type&apos;: &apos;EntitySpawner&apos;,
        ///&apos;obj_name&apos;: &apos;pyramid.spn&apos;,
        ///&apos;xfm_name&apos;: &apos;&apos;,
        ///&apos;constraint&apos;: &apos;kConstraintParent&apos;,
        ///&apos;pos&apos;: [0, 0, 0],
        ///&apos;rot_x&apos;: [1, 0, 0],
        ///&apos;rot_y&apos;: [0, 1, 0],
        ///&apos;rot_z&apos;: [0, 0, 1],
        ///&apos;scale [rest of string was truncated]&quot;;.
        /// </summary>
        public static string spn_default {
            get {
                return ResourceManager.GetString("spn_default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TRACK EFFECTS
        ///leafname
        ///leafname;pitch;pitch;kTraitFloat;True;1.25;[4,1,2,1,2,&apos;kIntensityScale&apos;,&apos;kIntensityScale&apos;,1,0,1,1,1,1,1,1,0,0,0]
        ///leafname;roll;roll;kTraitFloat;True;0;[4,1,2,1,2,&apos;kIntensityScale&apos;,&apos;kIntensityScale&apos;,1,0,1,1,1,1,1,1,0,0,0]
        ///leafname;turn;turn;kTraitFloat;True;0;[4,1,2,1,2,&apos;kIntensityScale&apos;,&apos;kIntensityScale&apos;,1,0,1,1,1,1,1,1,0,0,0]
        ///leafname;turn_auto;turn_auto;kTraitFloat;True;0;[4,1,2,1,2,&apos;kIntensityScale&apos;,&apos;kIntensityScale&apos;,1,0,1,1,1,1,1,1,0,0,0]
        ///leafname;scale_x;scale_x;kTraitFloat [rest of string was truncated]&quot;;.
        /// </summary>
        public static string track_objects {
            get {
                return ResourceManager.GetString("track_objects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&apos;obj_type&apos;: &apos;Xfmer&apos;,
        ///&apos;xfm_name&apos;: &apos;&apos;,
        ///&apos;constraint&apos;: &apos;kConstraintParent&apos;,
        ///&apos;pos&apos;: [0, 0, 0],
        ///&apos;rot_x&apos;: [1, 0, 0],
        ///&apos;rot_y&apos;: [0, 1, 0],
        ///&apos;rot_z&apos;: [0, 0, 1],
        ///&apos;scale&apos;: [1, 1, 1]
        ///}.
        /// </summary>
        public static string xfm_default {
            get {
                return ResourceManager.GetString("xfm_default", resourceCulture);
            }
        }
    }
}
